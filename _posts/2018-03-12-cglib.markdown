---
layout:     post
title:      "Java 进阶知识 (二) - Proxy 代理模式"
subtitle:   "\"浅谈JDK静态代理，JDK动态代理以及CGLIB动态代理异同\""
date:       2018-03-12 12:00:00
author:     "Gordon"
header-img: "img/in-post/2018-03-12-Proxy/Proxy-bg.jpg"
catalog: true
tags:
    - Java
    - Proxy
---

> 本文是基于`jdk1.8`&`CGLIB 3.1`来对Java代理模式的底层机制进行简浅探究

Java中代理的实现一般分为三种：
* JDK静态代理
* JDK动态代理
* CGLIB动态代理

**在Spring的AOP实现中，主要应用了JDK动态代理以及CGLIB动态代理。**


## JDK静态代理

创建一个接口，然后创建被代理的类实现该接口并且实现该接口中的抽象方法。之后再创建一个代理类，同时使其也实现这个接口。在代理类中持有一个被代理对象的引用，而后在代理类方法中调用该对象的方法。

其实就是代理类为被代理类预处理消息、过滤消息并在此之后将消息转发给被代理类，之后还能进行消息的后置处理。    
代理类和被代理类通常会存在关联关系(即上面提到的持有的被带离对象的引用)，代理类本身不实现服务，而是通过调用被代理类中的方法来提供服务。

![](/img/in-post/2018-03-12-Proxy/static-1.png)
接口
--