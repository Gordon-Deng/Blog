---
layout:     post
title:      "Java 软件工程技术 面试 个人指南#2"
subtitle:   "一切都是为了做个不后悔的自己"
date:       2018-02-24 12:00:00
author:     "Gordon"
header-img: "img/in-post/2018-02-24-interviews2/interviews2-bg.jpg"
catalog: true
tags:
    - Java
    - Interview
---

# 操作系统
* [页面置换算法](http://blog.csdn.net/u011080472/article/details/51206332)

**缺页中断**

请求分页系统中，可以通过查询页表中的状态位来确定所要访问的页面是否存在于内存中。每当所要访问的页面不在内存时，会产生一次缺页中断，此时操作系统会根据页表中的外存地址在外存中找到所缺的一页，将其调入内存。 
  
缺页本身是一种中断，与一般的中断一样，需要经过4个处理步骤： 
1. 保护CPU现场 
2. 分析中断原因 
3. 转入缺页中断处理程序进行处理 
4. 恢复CPU现场，继续执行 

但是缺页中断时由于所要访问的页面不存在与内存时，有硬件所产生的一种特殊的中断，因此，与一般的中断存在区别： 
1. 在指令执行期间产生和处理缺页中断信号 
2. 一条指令在执行期间，可能产生多次缺页中断 
3. 缺页中断返回时，执行产生中断的那一条指令，而一般的中断返回时，执行下一条指令

**最佳置换（Optimal， OPT)**

置换以后不再被访问，或者在将来最迟才回被访问的页面，缺页中断率最低。但是该算法需要依据以后各业的使用情况，而当一个进程还未运行完成是，很难估计哪一个页面是以后不再使用或在最长时间以后才会用到的页面。所以该算法是不能实现的。但该算法仍然有意义，作为很亮其他算法优劣的一个标准。


* 作业调度算法
* 线程进程区别

### 计算机网络
* 七层模型
* 三次握手四次挥手
* 拥塞控制
* get和post区别
* http、RPC基础
* TCP打开/关闭


### 数据结构
* 链表常规操作
* 环链判定
* 二叉树
* B树（结合数据库索引、存储）
* 红黑树几乎没涉及

### 数据库
* 四大特性，原子性需要特别注意
* mybatis和hibernate的知识（pojo、映射…）
* 读写分离，非常常用
* 服务器负载均衡（随机、轮询、活跃度调用、一致性哈希）
* 机房备份之类的就是比较常用的，但是很简单的，实际生产很常用。

### 常见算法
* 排序
* top K问题

### linux
* chmod
* top 
* grep

### jvm
* 分区
* 垃圾判定
* 分代模型
* 类加载过程
* 双亲委派

### java基础
* 继承封装多态深拷贝
* 重载重写
* java接口弥补没有多继承
* 静态绑定和动态绑定
* 值传递/引用传递
* final和static
* hashcode和equals（重写问题）
* hashmap源码（jdk1.8变动）
* hashmap和hashtable区别
* 线程（启动方式、状态切换）
* synchronized和volatile、可重入锁

### spring
* ioc和aop（反射和动态代理）
* 注入方式（设值、构造）
* 注解和配置

### 设计模式
* 单例、工厂必会
* 观察者装饰器，这种有点难度，但也常用的
* 其他都得了解

### 前沿技术
* 负载均衡（高可用）
* 服务化
* 容器化
* rpc调用
* 消息
* 机器学习
* 函数式编程（虽不常用但是有些新代码会有，关键是看你对新技术的嗅觉和自觉学习的心态）
* 模块化（java发展大势所趋）

### 其他
* 项目
* 论文
* 成绩

### 进阶
* [中间件](http://blog.csdn.net/erlian1992/article/details/53906210)（maven核心之pom）
* spring （阿里内部框架是spring大改之后重做的服务化的框架
* 最新的微服务框架（Dubbo、 SpringCloud、thrift、Hessian）基于springCloud这种，容器也在不断的被强调。开源的dubbo和pouch都有很多很棒的源码。